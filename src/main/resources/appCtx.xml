<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringModelInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context-3.1.xsd
                    http://www.springframework.org/schema/cache
                    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
                    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
                              http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
            http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">
    <!--
          引入properties配置文件
           -->
    <context:annotation-config />
    <context:component-scan base-package="com.myeden" /><!-- 改为你的包名 -->
    <aop:aspectj-autoproxy />
    <tx:annotation-driven />

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>
    <bean name="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>classpath:application.properties</value>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>

        <property name="validationQuery" value="select 1"></property>
        <property name="testOnBorrow" value="true"></property>
    </bean>



    <!-- hibernate 配置文件 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation">
            <value>classpath:cxfbean.xml</value>
        </property>

        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
                hibernate.hbm2ddl.auto=create
                hibernate.show_sql=true
                hibernate.format_sql=true
            </value>
        </property>
    </bean>

    <!-- hibernate 事务工厂 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="jsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider">

        <property name="mapper">
            <bean class="org.codehaus.jackson.map.ObjectMapper">
                <!--"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"-->
                 <property name="serializationConfig.dateFormat">
                  <bean class="java.text.SimpleDateFormat">
                    <constructor-arg value="yyyy-MM-dd"/>
                  </bean>
                </property>
                <property name="deserializationConfig.dateFormat">
                    <bean class="java.text.SimpleDateFormat">
                        <constructor-arg value="yyyy-MM-dd"/>
                    </bean>
                </property>
                <property name="serializationInclusion" value="NON_NULL"/>
            </bean>
        </property>
    </bean>

    <!--  demo for student -->

    <bean id="studentDao" class="com.myeden.dao.StudentDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="studentService" class="com.myeden.service.StudentServiceImpl"/>
    <jaxrs:server address="/rest">
        <jaxrs:serviceBeans>
            <ref bean="studentService"/>
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key="xml" value="application/xml"/>
            <entry key="json" value="application/json"/>
        </jaxrs:extensionMappings>
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonParseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor"/>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor"/>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>


    <!--   service for member   -->
    <bean id="memberDao" class="com.myeden.dao.MemberDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="memberService" class="com.myeden.service.MemberServiceImpl"/>
    <jaxrs:server address="/membs">
        <jaxrs:serviceBeans>
            <ref bean="memberService"/>
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key="xml" value="application/xml"/>
            <entry key="json" value="application/json"/>
        </jaxrs:extensionMappings>
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonParseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor"/>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor"/>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>

    <!--   service for category   -->
    <!--   service for member   -->
    <bean id="categoryDao" class="com.myeden.dao.CategoryDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="categoryService" class="com.myeden.service.CategoryService"/>
    <jaxrs:server address="/cates">
        <jaxrs:serviceBeans>
            <ref bean="categoryService"/>
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key="xml" value="application/xml"/>
            <entry key="json" value="application/json"/>
        </jaxrs:extensionMappings>
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonParseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor"/>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor"/>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>

    <!--   service for downlog    -->
    <bean id="downLogDao" class="com.myeden.dao.DownLogDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="downLogService" class="com.myeden.service.DownLogService"/>
    <jaxrs:server address="/logs">
        <jaxrs:serviceBeans>
            <ref bean="downLogService"/>
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key="xml" value="application/xml"/>
            <entry key="json" value="application/json"/>
        </jaxrs:extensionMappings>
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonParseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor"/>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor"/>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>

    <!--   service for product    -->
    <bean id="productDao" class="com.myeden.dao.ProductDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="productService" class="com.myeden.service.ProductService"/>
    <jaxrs:server address="/prods">
        <jaxrs:serviceBeans>
            <ref bean="productService"/>
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key="xml" value="application/xml"/>
            <entry key="json" value="application/json"/>
        </jaxrs:extensionMappings>
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonParseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor"/>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor"/>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>

    <!--   service for video    -->
    <bean id="vidoDao" class="com.myeden.dao.VidoDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="videoService" class="com.myeden.service.VideoService"/>
    <jaxrs:server address="/videos">
        <jaxrs:serviceBeans>
            <ref bean="videoService"/>
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key="xml" value="application/xml"/>
            <entry key="json" value="application/json"/>
        </jaxrs:extensionMappings>
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonParseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor"/>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor"/>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>

    <!--   service for systemDo    -->
    <bean id="systemDao" class="com.myeden.dao.SystemDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="systemService" class="com.myeden.service.SystemService"/>
    <jaxrs:server address="/sys">
        <jaxrs:serviceBeans>
            <ref bean="systemService"/>
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key="xml" value="application/xml"/>
            <entry key="json" value="application/json"/>
        </jaxrs:extensionMappings>
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonParseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor"/>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor"/>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>

    <!--   service for layout    -->
    <bean id="layoutDao" class="com.myeden.dao.LayoutDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="layoutService" class="com.myeden.service.LayoutService"/>
    <jaxrs:server address="/layout">
        <jaxrs:serviceBeans>
            <ref bean="layoutService"/>
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key="xml" value="application/xml"/>
            <entry key="json" value="application/json"/>
        </jaxrs:extensionMappings>
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonParseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor"/>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor"/>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>

    <!--   service for collect/applications    -->
    <bean id="collectDao" class="com.myeden.dao.CollectDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="collectService" class="com.myeden.service.CollectService"/>
    <jaxrs:server address="/collect">
        <jaxrs:serviceBeans>
            <ref bean="collectService"/>
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key="xml" value="application/xml"/>
            <entry key="json" value="application/json"/>
        </jaxrs:extensionMappings>
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper"/>
            <bean class="org.codehaus.jackson.jaxrs.JsonParseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor"/>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor"/>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>


</beans>